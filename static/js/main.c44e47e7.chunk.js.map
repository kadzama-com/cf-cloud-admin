{"version":3,"sources":["config.js","models/model.js","models/tag.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","reactAdminFirebaseOptions","logging","useFileNamesInStorage","firebaseDataProvider","FirebaseDataProvider","firebaseAuthProvider","FirebaseAuthProvider","ModelFilter","props","_jsxs","Filter","children","_jsx","TextInput","label","source","alwaysOn","NumberInput","ModelList","List","filters","Datagrid","rowClick","TextField","RichTextField","NumberField","ReferenceArrayField","reference","SingleFieldList","ChipField","ShowButton","EditButton","DeleteButton","redirect","ModelShow","Show","SimpleShowLayout","DateField","showTime","ArrayField","FileField","title","ImageField","BooleanField","ModelCreate","Create","SimpleForm","RichTextInput","SelectInput","choices","id","name","ReferenceArrayInput","SelectArrayInput","optionText","ArrayInput","SimpleFormIterator","FileInput","ImageInput","BooleanInput","ModelEdit","Edit","TagFilter","TagList","TagShow","TagCreate","TagEdit","App","Admin","dataProvider","authProvider","Resource","options","list","show","create","edit","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44e47e7.chunk.js","sourcesContent":["import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n} from \"react-admin-firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBP3MDb5upM0oEEHnCKp5GYX0OUowkbvQE\",\n  authDomain: \"kadzama3dprinter.firebaseapp.com\",\n  projectId: \"kadzama3dprinter\",\n  storageBucket: \"kadzama3dprinter.appspot.com\",\n  messagingSenderId: \"957194061920\",\n  appId: \"1:957194061920:web:463d3b0992b64378139b05\",\n  measurementId: \"G-X5N8W274ZC\",\n};\n\nconst reactAdminFirebaseOptions = {\n  logging: true,\n  useFileNamesInStorage: true,\n};\n\nexport const firebaseDataProvider = FirebaseDataProvider(\n  firebaseConfig,\n  reactAdminFirebaseOptions\n);\nexport const firebaseAuthProvider = FirebaseAuthProvider(\n  firebaseConfig,\n  reactAdminFirebaseOptions\n);\n","import * as React from \"react\";\n\nimport {\n    Datagrid,\n    List,\n    Show,\n    Create,\n    Edit,\n    Filter,\n    SimpleShowLayout,\n    SimpleForm,\n    TextField,\n    TextInput,\n    ShowButton,\n    EditButton,\n    DeleteButton,\n    SelectInput,\n    FileField,\n    FileInput,\n    NumberField,\n    NumberInput,\n    ArrayField,\n    ArrayInput,\n    SimpleFormIterator,\n    ImageField,\n    ImageInput,\n    BooleanField,\n    BooleanInput,\n    DateField,\n    RichTextField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    ReferenceArrayInput,\n    SelectArrayInput\n} from \"react-admin\";\nimport RichTextInput from \"ra-input-rich-text\";\n\n\nconst ModelFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Поиск\" source=\"name\" alwaysOn />\n        <NumberInput label=\"Количество цветов\" source=\"colors_num\" alwaysOn />\n    </Filter>\n);\n\nexport const ModelList = props => (\n    <List {...props} filters={<ModelFilter />}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"name\" label=\"Название\" />\n            <RichTextField source=\"description\" label=\"Описание\" />\n            <NumberField source=\"colors_num\" label=\"Количество цветов\" />\n            <TextField source=\"print_time\" label=\"Время печати, минут\" />\n            <ReferenceArrayField label=\"Тэги\" reference=\"storage/model-library/tags\" source=\"tag_ids\">\n                <SingleFieldList>\n                    <ChipField source=\"name\" />\n                </SingleFieldList>\n            </ReferenceArrayField>\n            <ShowButton label=\"\" />\n            <EditButton label=\"\" />\n            <DeleteButton label=\"\" redirect={false} />\n        </Datagrid>\n    </List>\n);\n\nexport const ModelShow = (props) => (\n    <Show {...props}>\n        <SimpleShowLayout>\n            <TextField source=\"name\" label=\"Название\" />\n            <NumberField source=\"colors_num\" label=\"Количество цветов\" />\n            <RichTextField source=\"description\" label=\"Описание\" />\n            <TextField source=\"print_time\" label=\"Время печати, минут\" />\n            <TextField source=\"pieces_num\" label=\"Количество изделий, шт.\" />\n            <TextField source=\"piece_size\" label=\"Габариты\" />\n            <TextField source=\"createdby\" label=\"Кем добавлено\" />\n            <DateField source=\"createdate\" label=\"Дата создания\" showTime={true} />\n            <DateField source=\"lastupdate\" label=\"Дата изменения\" showTime={true} />\n            <ReferenceArrayField label=\"Тэги\" reference=\"storage/model-library/tags\" source=\"tag_ids\">\n                <SingleFieldList>\n                    <ChipField source=\"name\" />\n                </SingleFieldList>\n            </ReferenceArrayField>\n            <ArrayField source=\"files\" label=\"Файлы\">\n                <Datagrid>\n                    <FileField source=\"file.src\" title=\"file.title\" label=\"Файл\" />\n                    <TextField source=\"name\" label=\"Название\" />\n                </Datagrid>\n            </ArrayField>\n            <ArrayField source=\"images\" label=\"Изображения\">\n                <Datagrid>\n                    <ImageField source=\"image.src\" title=\"image.title\" label=\"Изображение\" />\n                    <BooleanField source=\"is_thumbnail\" label=\"Главное изображение\" />\n                </Datagrid>\n            </ArrayField>\n        </SimpleShowLayout>\n    </Show>\n);\n\nexport const ModelCreate = (props) => (\n    <Create {...props} >\n        <SimpleForm>\n            <TextInput source=\"name\" label=\"Название\" />\n            <RichTextInput source=\"description\" label=\"Описание\" />\n            <TextInput source=\"print_time\" label=\"Время печати, минут\" />\n            <TextInput source=\"pieces_num\" label=\"Количество изделий, шт.\" />\n            <TextInput source=\"piece_size\" label=\"Габариты\" />\n\n            <SelectInput source=\"colors_num\" label=\"Количество цветов\" choices={[\n                { id: \"Одноцветная\", name: \"Одноцветная\" },\n                { id: \"Двухцветная\", name: \"Двухцветная\" },\n            ]} />\n\n            <ReferenceArrayInput source=\"tag_ids\" reference=\"storage/model-library/tags\">\n                <SelectArrayInput optionText=\"name\" />\n            </ReferenceArrayInput>\n\n            <ArrayInput source=\"files\">\n                <SimpleFormIterator>\n                    <FileInput source=\"file\" label=\"Файл\">\n                        <FileField source=\"src\" title=\"title\" />\n                    </FileInput>\n                    <TextInput source=\"name\" label=\"Название файла\" />\n                </SimpleFormIterator>\n            </ArrayInput>\n            <ArrayInput source=\"images\">\n                <SimpleFormIterator>\n                    <ImageInput source=\"image\" label=\"Файл\">\n                        <ImageField source=\"src\" title=\"title\" />\n                    </ImageInput>\n                    <BooleanInput source=\"is_thumbnail\" label=\"Главное изображение\" />\n                </SimpleFormIterator>\n            </ArrayInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const ModelEdit = (props) => (\n    <Edit {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" label=\"Название\" />\n            <RichTextInput source=\"description\" label=\"Описание\" />\n            <TextInput source=\"print_time\" label=\"Время печати, минут\" />\n            <TextInput source=\"pieces_num\" label=\"Количество изделий, шт.\" />\n            <TextInput source=\"piece_size\" label=\"Габариты\" />\n            <SelectInput source=\"colors_num\" label=\"Количество цветов\" choices={[\n                { id: \"Одноцветная\", name: \"Одноцветная\" },\n                { id: \"Двухцветная\", name: \"Двухцветная\" },\n            ]} />\n\n            <ReferenceArrayInput source=\"tag_ids\" reference=\"storage/model-library/tags\">\n                <SelectArrayInput optionText=\"name\" />\n            </ReferenceArrayInput>\n\n            <ArrayInput source=\"files\">\n                <SimpleFormIterator>\n                    <FileInput source=\"file\" label=\"Файл\">\n                        <FileField source=\"src\" title=\"title\" />\n                    </FileInput>\n                    <TextInput source=\"name\" label=\"Название файла\" />\n                </SimpleFormIterator>\n            </ArrayInput>\n            <ArrayInput source=\"images\">\n                <SimpleFormIterator>\n                    <ImageInput source=\"image\" label=\"Изображение\">\n                        <ImageField source=\"src\" title=\"title\" />\n                    </ImageInput>\n                    <BooleanInput source=\"is_thumbnail\" label=\"Главное изображение\" />\n                </SimpleFormIterator>\n            </ArrayInput>\n        </SimpleForm>\n    </Edit>\n);","import * as React from \"react\";\nimport {\n    Datagrid,\n    List,\n    Show,\n    Create,\n    Edit,\n    Filter,\n    SimpleShowLayout,\n    SimpleForm,\n    TextField,\n    TextInput,\n    ShowButton,\n    EditButton,\n    DeleteButton,\n    BooleanField,\n    BooleanInput,\n} from \"react-admin\";\n\n\nconst TagFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Поиск\" source=\"name\" alwaysOn />\n    </Filter>\n);\n\nexport const TagList = props => (\n    <List {...props} filters={<TagFilter />}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"name\" label=\"Название\" />\n            <BooleanField source=\"as_category\" label=\"Показывать как категорию\" />\n            <ShowButton label=\"\" />\n            <EditButton label=\"\" />\n            <DeleteButton label=\"\" redirect={false} />\n        </Datagrid>\n    </List>\n);\n\nexport const TagShow = (props) => (\n    <Show {...props}>\n        <SimpleShowLayout>\n            <TextField source=\"name\" label=\"Название\" />\n            <BooleanField source=\"as_category\" label=\"Показывать как категорию\" />\n        </SimpleShowLayout>\n    </Show>\n);\n\nexport const TagCreate = (props) => (\n    <Create {...props} >\n        <SimpleForm>\n            <TextInput source=\"name\" label=\"Название\" />\n            <BooleanInput source=\"as_category\" label=\"Показывать как категорию\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const TagEdit = (props) => (\n    <Edit {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" label=\"Название\" />\n            <BooleanInput source=\"as_category\" label=\"Показывать как категорию\" />\n        </SimpleForm>\n    </Edit>\n);\n","import * as React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { firebaseDataProvider, firebaseAuthProvider } from \"./config\";\nimport { ModelList, ModelCreate, ModelShow, ModelEdit } from \"./models/model\";\nimport { TagList, TagCreate, TagShow, TagEdit } from \"./models/tag\";\n\n\n\nconst App = () => (\n  <Admin dataProvider={firebaseDataProvider} authProvider={firebaseAuthProvider}>\n    <Resource options={{ label: 'Модели' }} name=\"storage/model-library/public\" list={ModelList} show={ModelShow} create={ModelCreate} edit={ModelEdit} />\n    <Resource options={{ label: 'Теги' }} name=\"storage/model-library/tags\" list={TagList} show={TagShow} create={TagCreate} edit={TagEdit} />\n  </Admin>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}